rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // 認証済みかどうかチェックする関数
    function isAuthenticated() {
      return request.auth != null;
    }

    // ユーザーのIDと認証情報が一致するかチェックする関数
    function isUserAuthenticated(userID) {
      return request.auth.uid == userID;
    }

    // request.resource.dataを返す関数
    function incomingData() {
      return request.resource.data;
    }

    // フィールドの値がstringの場合のバリデーション関数
    function validateString(text, min, max) {
      return text is string && min <= text.size() && text.size() <= max;
    }

    match /users/{userID} {
      allow create: if isUserAuthenticated(userID)
        && (!('name' in incomingData()) || (validateString(incomingData().name, 3, 10)))
        && incomingData().createdAt == request.time
        && incomingData().updatedAt == request.time
      ;
      allow update: if isUserAuthenticated(userID) && incomingData().updatedAt == request.time;
      allow get: if isUserAuthenticated(userID);
    }
  }
}